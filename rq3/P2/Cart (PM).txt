//Cart.java
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Cart {
    private List<Item> cartItems;
    private final User user;

    private static final Map<String, Double> discounts = Collections.unmodifiableMap(new HashMap<>() {{
        put("loyal", 0.1d);
        put("superpromo", 0.25d);
        put("30ff", 0.3d);
        put("2024", 0.2d);
    }});


    public Cart(User user) {
        this.user = user;
    }

    public double sum_items() {
        double sum = 0;
        for(Item item: cartItems) {
            if(item.coupon)
                sum -= item.value*item.amount;
            else
                sum += item.value*item.amount;
        }
        return sum;
    }
    public double total_cost(double discount) {
        double sum = sum_items();
        return sum - sum * discount;
    }

    public void add_item(Item item) {
        cartItems.add(item);
    }
    public void checkout(String code) {
        double cost = total_cost(discounts.get(code));
        user.balance -= cost;
        cartItems.clear();
    }
}

//CartTest.java
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


/**
 * Test class of Cart.
 * It contains 10 unit test cases for the
 * sum_items() method.
 */
 class CartTest {

