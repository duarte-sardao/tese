//Cart.java
import java.util.*;

public class Cart {
    private List<Item> cartItems;
    private final User user;

    private static final Map<String, Double> discounts = Collections.unmodifiableMap(new HashMap<>() {{
        put("loyal", 0.1d);
        put("30ff", 0.3d); put("2023", 0.3d);
        put("throwback", 0.15d); put("2024", 0.2d);
        put("fun", 0.05d);
    }});

    public Set<String> getDiscountCodes() {
        return discounts.keySet();
    }

    public boolean checkForDiscountRenewal() {
        if(getDiscountCodes().size() <= 6)
            return true;
        else
            return false;
    }


    public Cart(User user) {
        this.user = user;
        cartItems = new ArrayList<>();
    }

    public double sum_items() {
        double sum = 0;
        for(Item item: cartItems) {
            sum += item.value*item.amount;
        }
        return Math.max(0, sum);
    }
    public double total_cost(double discount) {
        double sum = sum_items();
        return sum - sum * discount;
    }

    public void add_item(Item item) {
        cartItems.add(item);
    }
    public void checkout(String code) {
        double cost = total_cost(discounts.get(code));
        user.balance -= cost;
        cartItems.clear();
    }
}

//CartTest.java
import java.util.*;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


/**
 * Test class of Cart.
 * It contains 10 unit test cases for the
 * getDiscountCodes() method.
 */
 class CartTest {

