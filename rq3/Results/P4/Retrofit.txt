package retrofit;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.List;
import retrofit.client.Header;
import retrofit.client.Request;
import retrofit.converter.Converter;
import retrofit.mime.FormUrlEncodedTypedOutput;
import retrofit.mime.MultipartTypedOutput;
import retrofit.mime.TypedOutput;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


/**
 * Test class of RequestBuilder.
 * It contains 10 unit test cases for the
 * build() method.
 */
 class RequestBuilderTest {

Completion:

  /**
   * Test case for the build() method.
   * It tests the case when the apiUrl is null.
   * The expected result is an IllegalArgumentException.
   */
  @Test
  void testBuildApiUrlNull() {
    RequestBuilder requestBuilder = new RequestBuilder(null);
    requestBuilder.apiUrl(null);
    requestBuilder.methodInfo(new RestMethodInfo());
    requestBuilder.args(new Object[0]);
    requestBuilder.headers(new ArrayList<Header>());
    assertThrows(IllegalArgumentException.class, () -> {
      requestBuilder.build();
    });
  }

  /**
   * Test case for the build() method.
   * It tests the case when the methodInfo is null.
   * The expected result is an IllegalArgumentException.
   */
  @Test
  void testBuildMethodInfoNull() {
    RequestBuilder requestBuilder = new RequestBuilder(null);
    requestBuilder.apiUrl("apiUrl");
    requestBuilder.methodInfo(null);
    requestBuilder.args(new Object[0]);
    requestBuilder.headers(new ArrayList<Header>());
    assertThrows(IllegalArgumentException.class, () -> {
      requestBuilder.build();
    });
  }

  /**
   * Test case for the build() method.
   * It tests the case when the args is null.
   * The expected result is an IllegalArgumentException.
   */
  @Test
  void testBuildArgsNull() {
    RequestBuilder requestBuilder = new RequestBuilder(null);
    requestBuilder.apiUrl("apiUrl");
    requestBuilder.methodInfo(new RestMethodInfo());
    requestBuilder.args(null);
    requestBuilder.headers(new ArrayList<Header>());
    assertThrows(IllegalArgumentException.class, () -> {
      requestBuilder.build();
    });
  }

  /**
   * Test case for the build() method.
   * It tests the case when the headers is null.
   * The expected result is an IllegalArgumentException.
   */
  @Test
  void testBuildHeadersNull() {
    RequestBuilder requestBuilder = new RequestBuilder(null);
    requestBuilder.apiUrl("apiUrl");
    requestBuilder.methodInfo(new RestMethodInfo());
    requestBuilder.args(new Object[0]);
    requestBuilder.headers(null);
    assertThrows(IllegalArgumentException.class, () -> {
      requestBuilder.build();
    });
  }

  /**
   * Test case for the build() method.
   * It tests the case when the headers is empty.
   * The expected result is an IllegalArgumentException.
   */
  @Test
  void testBuildHeadersEmpty() {
    RequestBuilder requestBuilder = new RequestBuilder(null);