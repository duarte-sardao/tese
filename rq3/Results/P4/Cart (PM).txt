import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


/**
 * Test class of Cart.
 * It contains 10 unit test cases for the
 * sum_items() method.
 */
 class CartTest {

Completion:

    @Test
    void testSumItems() {
        Cart cart = new Cart(new User("John", 1000));
        cart.add_item(new Item("item1", 10, 1, false));
        cart.add_item(new Item("item2", 20, 2, false));
        cart.add_item(new Item("item3", 30, 3, false));
        cart.add_item(new Item("item4", 40, 4, false));
        cart.add_item(new Item("item5", 50, 5, false));
        assertEquals(550, cart.sum_items());
    }

    @Test
    void testSumItemsWithCoupon() {
        Cart cart = new Cart(new User("John", 1000));
        cart.add_item(new Item("item1", 10, 1, true));
        cart.add_item(new Item("item2", 20, 2, true));
        cart.add_item(new Item("item3", 30, 3, true));
        cart.add_item(new Item("item4", 40, 4, true));
        cart.add_item(new Item("item5", 50, 5, true));
        assertEquals(-550, cart.sum_items());
    }

    @Test
    void testSumItemsEmptyCart() {
        Cart cart = new Cart(new User("John", 1000));
        assertEquals(0, cart.sum_items());
    }

    @Test
    void testSumItemsOneItem() {
        Cart cart = new Cart(new User("John", 1000));
        cart.add_item(new Item("item1", 10, 1, false));
        assertEquals(10, cart.sum_items());
    }

    @Test
    void testSumItemsOneItemWithCoupon() {
        Cart cart = new Cart(new User("John", 1000));
        cart.add_item(new Item("item1", 10, 1, true));
        assertEquals(-10, cart.sum_items());
    }

    @Test
    void testSumItemsNegativeValue() {
        Cart cart = new Cart(new User("John", 1000));
        cart.add_item(new Item("item1", -10, 1, false));
        assertEquals(-10, cart.sum_items());
    }

    @Test
    void testSumItemsNegativeValueWithCoupon() {
        Cart cart = new Cart(new User("John", 1000));