import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;


/**
 * Test class of Cart.
 * It contains 10 unit test cases for the
 * sum_items() method.
 */
 class CartTest {

Completion:


    @Test
    void testSumItems() {
        Cart cart = new Cart(new User("John", 1000));
        Item item1 = new Item("item1", 10, 1, false);
        Item item2 = new Item("item2", 20, 2, false);
        Item item3 = new Item("item3", 30, 3, false);
        cart.add_item(item1);
        cart.add_item(item2);
        cart.add_item(item3);
        assertEquals(140, cart.sum_items());
    }

    @Test
    void testSumItemsWithCoupon() {
        Cart cart = new Cart(new User("John", 1000));
        Item item1 = new Item("item1", 10, 1, true);
        Item item2 = new Item("item2", 20, 2, true);
        Item item3 = new Item("item3", 30, 3, true);
        cart.add_item(item1);
        cart.add_item(item2);
        cart.add_item(item3);
        assertEquals(-140, cart.sum_items());
    }

    @Test
    void testSumItemsWithEmptyCart() {
        Cart cart = new Cart(new User("John", 1000));
        assertEquals(0, cart.sum_items());
    }

    @Test
    void testSumItemsWithOneItem() {
        Cart cart = new Cart(new User("John", 1000));
        Item item1 = new Item("item1", 10, 1, false);
        cart.add_item(item1);
        assertEquals(10, cart.sum_items());
    }

    @Test
    void testSumItemsWithOneItemAndCoupon() {
        Cart cart = new Cart(new User("John", 1000));
        Item item1 = new Item("item1", 10, 1, true);
        cart.add_item(item1);
        assertEquals(-10, cart.sum_items());
    }

    @Test
    void testSumItemsWithTwoItems() {
        Cart cart = new Cart(new User("John", 1000));
        Item item1 = new Item("item1", 10, 1, false);
        Item item2 = new Item("item2", 20, 2, false);
        cart.add_item(item1);
        cart.add_item(item2);
        assertEquals(50, cart.sum_items());
    }